#include<stdio.h>
#define MAX_PROCESS 10

int main(){
    int n,i;
    int burst_time[MAX_PROCESS],remaining_time[MAX_PROCESS];
    int process_order[MAX_PROCESS],waiting_time[MAX_PROCESS];
    int turnaround_time[MAX_PROCESS],arrival_time[MAX_PROCESS];
    
    int current_time=0;
    int complete=0;
    
    printf("Enter the number of processes:\n");
    scanf("%d",&n);
    
    printf("Enter the burst time for each process\n");
    for(i=0;i<n;i++){
        printf("Burst time for process %d:",i+1);
        scanf("%d",&burst_time[i]);
        remaining_time[i] = burst_time[i];
        process_order[i]=i+1;
    }
    
    printf("Enter the arrival times for each process\n");
    for(i=0;i<n;i++){
        printf("arrival time for process %d:",i+1);
        scanf("%d",&arrival_time[i]);
       
    }
    
    while(complete<n){
        int shortest_job=-1;
        int shortest_time=9999;
        
        for(i=0;i<n;i++){
            if(arrival_time[i]<=current_time && remaining_time[i]>0 && remaining_time[i]<shortest_time){
                shortest_job = i;
                shortest_time = remaining_time[i];
            }
        }
        
        if(shortest_job==-1){
            current_time++;
        }
        else{
            remaining_time[shortest_job]--;
            current_time++;
            
            if(remaining_time[shortest_job]==0){
                complete++;
                
                waiting_time[shortest_job] = current_time - arrival_time[shortest_job] - burst_time[shortest_job];
                
                if(waiting_time[shortest_job]<0)
                {
                    waiting_time[shortest_job]=0;
                }
                
                turnaround_time[shortest_job] = waiting_time[shortest_job] + burst_time[shortest_job];
            }
        }
    }
    
    
    double avg_waiting_time=0,avg_turnaround_time=0;
    
    for(i=0;i<n;i++){
        avg_waiting_time+=waiting_time[i];
        avg_turnaround_time+=turnaround_time[i];
    }
    
    avg_waiting_time/=n;
    avg_turnaround_time/=n;
    
    
    printf("\n\n Process\tBurst Time\t Arrival Time\tWaiting Time \t Turnaround Time\n");
    
    for(i=0;i<n;i++){
        printf("P%d\t%d\t\t%d\t\t%d\t\t%d\n",process_order[i],burst_time[i],arrival_time[i],waiting_time[i],turnaround_time[i]);
    
    }
    
    
    printf("\n Average Waiting time:%f",avg_waiting_time);
    printf("\n Average Turnaround time:%f",avg_turnaround_time);
    
    return 0;
    
    
    
    
}
